name: Bump and Build Prod

on:
  pull_request:
    types: [closed]
    branches:
      - releasebranch

concurrency: production

jobs:
  Bump_and_Build_Prod:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release_')
    runs-on: self-hosted
    environment: production
    permissions:
      contents: write

    steps:
      - name: Debug Logging
        run: |
          echo "Base Ref: ${{ github.base_ref }}"
          echo "Pull Request Base Ref: ${{ github.event.pull_request.base.ref }}"
          echo "Pull Request Head Ref: ${{ github.event.pull_request.head.ref }}"
          echo "Pull Request Merged: ${{ github.event.pull_request.merged }}"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Github Tag Bump Dry Run
        id: taggerDryRun
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          PRERELEASE_SUFFIX: release
          DRY_RUN: true
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0

      - name: Echo new tag
        run: |
          echo "The next tag version will be: ${{ steps.taggerDryRun.outputs.new_tag }}"
          echo "TAG_VERSION=${{ steps.taggerDryRun.outputs.new_tag }}" >> "$GITHUB_ENV"

      - name: Echo tag
        run: |
          echo "The current tag is: ${{ steps.taggerDryRun.outputs.tag }}"

      - name: Echo part
        run: |
          echo "The version increment was: ${{ steps.taggerDryRun.outputs.part }}"

      - name: Minor version update for each merge
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          PRERELEASE_SUFFIX: release
          DRY_RUN: false
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0

      - name: Running Dock/Kube directly
        run: |
          docker build -t quote_server:$TAG_VERSION .
          sed -i "s/tag/$TAG_VERSION/g" Kubernetes/deployment_prod.yaml
          sed -i "s/api_key/${{ secrets.API_KEY }}/g" Kubernetes/deployment_prod.yaml
          cat Kubernetes/deployment_prod.yaml | grep value
          kubectl apply -f Kubernetes/deployment_prod.yaml
          kubectl apply -f Kubernetes/service_prod.yaml
